{
  "name": "npm-stats",
  "version": "0.2.0",
  "description": "Convenience module for getting back data from an NPM registry",
  "main": "index.js",
  "dependencies": {
    "event-stream": "~3.0.12",
    "JSONStream": "~0.6.2",
    "nano": "~3.3.8"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/npm-stats.git"
  },
  "keywords": [
    "modules",
    "npm",
    "data",
    "information",
    "analytics",
    "statistics",
    "stats",
    "users",
    "keywords"
  ],
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "readme": "# npm-stats #\n\nConvenience module for getting back data from an NPM registry.\nAll of the methods return a JSON stream, and/or take a callback.\nWhere specified, some methods take an optional options object as well.\n\n## API ##\n\n**registry = require('npm-stats')([url, options])**\n\nReturns a new registry instance,\ndefaulting to [isaacs.iriscouch.com](https://isaacs.iriscouch.com/).\n\nOptions:\n\n* `dirty`: pass this as true to disable data cleaning, instead getting\n  the raw data direct from NPM's CouchDB.\n* `modules`: the database to use for retrieving modules. Defaults\n  to \"registry\".\n* `downloads`: the database to use for retrieving download data. Defaults\n  to \"downloads\".\n* `users`: the database to use for retrieving users. Defaults to \"users\".\n\n**registry.list()**\n\nReturns an array containing every module currently in the chosen NPM registry.\n\n### Keywords ###\n\n**registry.keyword(name).count()**\n\nGet the number of modules using a specific keyword.\n\n**registry.keyword(name).list()**\n\nGet a list of modules using a specific keyword.\n\n### Users ###\n\n**registry.user(name).count()**\n\nGet the number of modules a user has authored.\n\n**registry.user(name).list()**\n\nGet a list of the modules a user has authored.\n\n**registry.user(name).starred()**\n\nGet a list of the modules a user has starred.\n\n### Modules ###\n\n**registry.module(name).info()**\n\nReturns the data normally accessible from\n`https://registry.npmjs.org/:pkg`.\n\n**registry.module(name).downloads()**\n\nReturns a list of download counts for the module, by date, e.g.:\n\n``` json\n[\n  { \"date\": \"2012-12-10\", \"value\": 64 },\n  { \"date\": \"2012-12-11\", \"value\": 82 }\n]\n```\n\nDays without a download are omitted. Options:\n\n* `since`: The earliest date to return download info from.\n* `until`: The latest date to return download info from.\n\n**registry.module(name).stars()**\n\nReturns a list of the users who have starred a module.\n\n**registry.module(name).latest()**\n\nReturns the latest `package.json` file for a module.\n\n**registry.module(name).field(name, [callback])**\n\nReturns a field from the latest `package.json` file for a module.\n\n**registry.module(name).size()**\n\nReturns data on the module's size, e.g.\n\n``` json\n{\n  \"_id\": \"browserify\",\n  \"size\": 26338241,\n  \"count\": 179,\n  \"avg\": 147141.01117318432\n}\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hughsk/npm-stats/issues"
  },
  "_id": "npm-stats@0.2.0",
  "_from": "npm-stats@~0.2.0"
}
